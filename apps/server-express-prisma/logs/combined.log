{"level":"error","message":"Unhandled error in generalErrorHandler","service":"realworld-express-prisma"}
{"level":"error","message":"Password is required\nError\nError: Password is required\n    at D:\\Code\\realworld-express\\packages\\validator\\src\\validation\\index.ts:14:13\n    at Generator.throw (<anonymous>)\n    at rejected (D:\\Code\\realworld-express\\packages\\validator\\src\\validation\\index.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)","service":"realworld-express-prisma"}
{"level":"error","message":"Unhandled error in generalErrorHandler","service":"realworld-express-prisma"}
{"level":"error","message":"\nInvalid `prisma.user.create()` invocation in\nD:\\Code\\realworld-express\\apps\\server-express-prisma\\src\\utils\\db\\user\\userCreatePrisma.ts:5:28\n\n  2 import prisma from '../prisma';\n  3 \n  4 const userCreatePrisma = async ({ username, email, password }: UserRegisterInputType) => {\n→ 5   return await prisma.user.create(\nUnique constraint failed on the fields: (`username`)\nPrismaClientKnownRequestError\nPrismaClientKnownRequestError: \nInvalid `prisma.user.create()` invocation in\nD:\\Code\\realworld-express\\apps\\server-express-prisma\\src\\utils\\db\\user\\userCreatePrisma.ts:5:28\n\n  2 import prisma from '../prisma';\n  3 \n  4 const userCreatePrisma = async ({ username, email, password }: UserRegisterInputType) => {\n→ 5   return await prisma.user.create(\nUnique constraint failed on the fields: (`username`)\n    at Cn.handleRequestError (D:\\Code\\realworld-express\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (D:\\Code\\realworld-express\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (D:\\Code\\realworld-express\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at l (D:\\Code\\realworld-express\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)","service":"realworld-express-prisma"}
